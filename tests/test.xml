<class>
 <keyword>class</keyword>
 <identifier>Square</identifier>
 <symbol>{</symbol>
 <ClassVarDec>
  <keyword>field</keyword>
  <keyword>int</keyword>
  <identifier>x</identifier>
  <symbol>,</symbol>
  <identifier>y</identifier>
  <symbol>;</symbol>
 </ClassVarDec>
 <ClassVarDec>
  <keyword>field</keyword>
  <keyword>int</keyword>
  <identifier>size</identifier>
  <symbol>;</symbol>
 </ClassVarDec>
 <SubroutineDec>
  <keyword>constructor</keyword>
  <identifier>Square</identifier>
  <identifier>new</identifier>
  <symbol>(</symbol>
  <ParameterList>
   <keyword>int</keyword>
   <identifier>Ax</identifier>
   <symbol>,</symbol>
   <keyword>int</keyword>
   <identifier>Ay</identifier>
   <symbol>,</symbol>
   <keyword>int</keyword>
   <identifier>Asize</identifier>
  </ParameterList>
  <symbol>)</symbol>
  <symbol>{</symbol>
  <SubroutineBody>
   <Statements>
    <LetStatement>
     <keyword>let</keyword>
     <identifier>x</identifier>
     <symbol>=</symbol>
     <Expression>
      <identifier>Ax</identifier>
     </Expression>
     <symbol>;</symbol>
    </LetStatement>
    <LetStatement>
     <keyword>let</keyword>
     <identifier>y</identifier>
     <symbol>=</symbol>
     <Expression>
      <identifier>Ay</identifier>
     </Expression>
     <symbol>;</symbol>
    </LetStatement>
    <LetStatement>
     <keyword>let</keyword>
     <identifier>size</identifier>
     <symbol>=</symbol>
     <Expression>
      <identifier>Asize</identifier>
     </Expression>
     <symbol>;</symbol>
    </LetStatement>
    <DoStatement>
     <keyword>do</keyword>
     <identifier>draw</identifier>
     <symbol>(</symbol>
     <ExpressionList>
     </ExpressionList>
     <symbol>)</symbol>
     <symbol>;</symbol>
    </DoStatement>
    <ReturnStatement>
     <keyword>return</keyword>
     <Expression>
      <keyword>this</keyword>
     </Expression>
     <symbol>;</symbol>
    </ReturnStatement>
   </Statements>
  </SubroutineBody>
  <symbol>}</symbol>
 </SubroutineDec>
 <SubroutineDec>
  <keyword>method</keyword>
  <keyword>void</keyword>
  <identifier>dispose</identifier>
  <symbol>(</symbol>
  <ParameterList>
  </ParameterList>
  <symbol>)</symbol>
  <symbol>{</symbol>
  <SubroutineBody>
   <Statements>
    <DoStatement>
     <keyword>do</keyword>
     <identifier>Memory</identifier>
     <symbol>.</symbol>
     <identifier>deAlloc</identifier>
     <symbol>(</symbol>
     <ExpressionList>
      <Expression>
       <keyword>this</keyword>
      </Expression>
     </ExpressionList>
     <symbol>)</symbol>
     <symbol>;</symbol>
    </DoStatement>
    <ReturnStatement>
     <keyword>return</keyword>
     <symbol>;</symbol>
    </ReturnStatement>
   </Statements>
  </SubroutineBody>
  <symbol>}</symbol>
 </SubroutineDec>
 <SubroutineDec>
  <keyword>method</keyword>
  <keyword>void</keyword>
  <identifier>draw</identifier>
  <symbol>(</symbol>
  <ParameterList>
  </ParameterList>
  <symbol>)</symbol>
  <symbol>{</symbol>
  <SubroutineBody>
   <Statements>
    <DoStatement>
     <keyword>do</keyword>
     <identifier>Screen</identifier>
     <symbol>.</symbol>
     <identifier>setColor</identifier>
     <symbol>(</symbol>
     <ExpressionList>
      <Expression>
       <keyword>true</keyword>
      </Expression>
     </ExpressionList>
     <symbol>)</symbol>
     <symbol>;</symbol>
    </DoStatement>
    <DoStatement>
     <keyword>do</keyword>
     <identifier>Screen</identifier>
     <symbol>.</symbol>
     <identifier>drawRectangle</identifier>
     <symbol>(</symbol>
     <ExpressionList>
      <Expression>
       <identifier>x</identifier>
      </Expression>
      <symbol>,</symbol>
      <Expression>
       <identifier>y</identifier>
      </Expression>
      <symbol>,</symbol>
      <Expression>
       <identifier>x</identifier>
       <symbol>+</symbol>
       <Expression>
        <identifier>size</identifier>
       </Expression>
      </Expression>
      <symbol>,</symbol>
      <Expression>
       <identifier>y</identifier>
       <symbol>+</symbol>
       <Expression>
        <identifier>size</identifier>
       </Expression>
      </Expression>
     </ExpressionList>
     <symbol>)</symbol>
     <symbol>;</symbol>
    </DoStatement>
    <ReturnStatement>
     <keyword>return</keyword>
     <symbol>;</symbol>
    </ReturnStatement>
   </Statements>
  </SubroutineBody>
  <symbol>}</symbol>
 </SubroutineDec>
 <SubroutineDec>
  <keyword>method</keyword>
  <keyword>void</keyword>
  <identifier>erase</identifier>
  <symbol>(</symbol>
  <ParameterList>
  </ParameterList>
  <symbol>)</symbol>
  <symbol>{</symbol>
  <SubroutineBody>
   <Statements>
    <DoStatement>
     <keyword>do</keyword>
     <identifier>Screen</identifier>
     <symbol>.</symbol>
     <identifier>setColor</identifier>
     <symbol>(</symbol>
     <ExpressionList>
      <Expression>
       <keyword>false</keyword>
      </Expression>
     </ExpressionList>
     <symbol>)</symbol>
     <symbol>;</symbol>
    </DoStatement>
    <DoStatement>
     <keyword>do</keyword>
     <identifier>Screen</identifier>
     <symbol>.</symbol>
     <identifier>drawRectangle</identifier>
     <symbol>(</symbol>
     <ExpressionList>
      <Expression>
       <identifier>x</identifier>
      </Expression>
      <symbol>,</symbol>
      <Expression>
       <identifier>y</identifier>
      </Expression>
      <symbol>,</symbol>
      <Expression>
       <identifier>x</identifier>
       <symbol>+</symbol>
       <Expression>
        <identifier>size</identifier>
       </Expression>
      </Expression>
      <symbol>,</symbol>
      <Expression>
       <identifier>y</identifier>
       <symbol>+</symbol>
       <Expression>
        <identifier>size</identifier>
       </Expression>
      </Expression>
     </ExpressionList>
     <symbol>)</symbol>
     <symbol>;</symbol>
    </DoStatement>
    <ReturnStatement>
     <keyword>return</keyword>
     <symbol>;</symbol>
    </ReturnStatement>
   </Statements>
  </SubroutineBody>
  <symbol>}</symbol>
 </SubroutineDec>
 <SubroutineDec>
  <keyword>method</keyword>
  <keyword>void</keyword>
  <identifier>incSize</identifier>
  <symbol>(</symbol>
  <ParameterList>
  </ParameterList>
  <symbol>)</symbol>
  <symbol>{</symbol>
  <SubroutineBody>
   <Statements>
    <IfStatement>
     <keyword>if</keyword>
     <symbol>(</symbol>
     <Expression>
      <symbol>(</symbol>
      <Expression>
       <symbol>(</symbol>
       <Expression>
        <identifier>y</identifier>
        <symbol>+</symbol>
        <Expression>
         <identifier>size</identifier>
        </Expression>
       </Expression>
       <symbol>)</symbol>
       <symbol><</symbol>
       <Expression>
        <int_constant>254</int_constant>
       </Expression>
      </Expression>
      <symbol>)</symbol>
      <symbol>&</symbol>
      <Expression>
       <symbol>(</symbol>
       <Expression>
        <symbol>(</symbol>
        <Expression>
         <identifier>x</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
        <symbol>)</symbol>
        <symbol><</symbol>
        <Expression>
         <int_constant>510</int_constant>
        </Expression>
       </Expression>
       <symbol>)</symbol>
      </Expression>
     </Expression>
     <symbol>)</symbol>
     <symbol>{</symbol>
     <Statements>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>erase</identifier>
       <symbol>(</symbol>
       <ExpressionList>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <LetStatement>
       <keyword>let</keyword>
       <identifier>size</identifier>
       <symbol>=</symbol>
       <Expression>
        <identifier>size</identifier>
        <symbol>+</symbol>
        <Expression>
         <int_constant>2</int_constant>
        </Expression>
       </Expression>
       <symbol>;</symbol>
      </LetStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>draw</identifier>
       <symbol>(</symbol>
       <ExpressionList>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
     </Statements>
     <symbol>}</symbol>
    </IfStatement>
    <ReturnStatement>
     <keyword>return</keyword>
     <symbol>;</symbol>
    </ReturnStatement>
   </Statements>
  </SubroutineBody>
  <symbol>}</symbol>
 </SubroutineDec>
 <SubroutineDec>
  <keyword>method</keyword>
  <keyword>void</keyword>
  <identifier>decSize</identifier>
  <symbol>(</symbol>
  <ParameterList>
  </ParameterList>
  <symbol>)</symbol>
  <symbol>{</symbol>
  <SubroutineBody>
   <Statements>
    <IfStatement>
     <keyword>if</keyword>
     <symbol>(</symbol>
     <Expression>
      <identifier>size</identifier>
      <symbol>></symbol>
      <Expression>
       <int_constant>2</int_constant>
      </Expression>
     </Expression>
     <symbol>)</symbol>
     <symbol>{</symbol>
     <Statements>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>erase</identifier>
       <symbol>(</symbol>
       <ExpressionList>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <LetStatement>
       <keyword>let</keyword>
       <identifier>size</identifier>
       <symbol>=</symbol>
       <Expression>
        <identifier>size</identifier>
        <symbol>-</symbol>
        <Expression>
         <int_constant>2</int_constant>
        </Expression>
       </Expression>
       <symbol>;</symbol>
      </LetStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>draw</identifier>
       <symbol>(</symbol>
       <ExpressionList>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
     </Statements>
     <symbol>}</symbol>
    </IfStatement>
    <ReturnStatement>
     <keyword>return</keyword>
     <symbol>;</symbol>
    </ReturnStatement>
   </Statements>
  </SubroutineBody>
  <symbol>}</symbol>
 </SubroutineDec>
 <SubroutineDec>
  <keyword>method</keyword>
  <keyword>void</keyword>
  <identifier>moveUp</identifier>
  <symbol>(</symbol>
  <ParameterList>
  </ParameterList>
  <symbol>)</symbol>
  <symbol>{</symbol>
  <SubroutineBody>
   <Statements>
    <IfStatement>
     <keyword>if</keyword>
     <symbol>(</symbol>
     <Expression>
      <identifier>y</identifier>
      <symbol>></symbol>
      <Expression>
       <int_constant>1</int_constant>
      </Expression>
     </Expression>
     <symbol>)</symbol>
     <symbol>{</symbol>
     <Statements>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>setColor</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <keyword>false</keyword>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>drawRectangle</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <identifier>x</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <symbol>(</symbol>
         <Expression>
          <identifier>y</identifier>
          <symbol>+</symbol>
          <Expression>
           <identifier>size</identifier>
          </Expression>
         </Expression>
         <symbol>)</symbol>
         <symbol>-</symbol>
         <Expression>
          <int_constant>1</int_constant>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>x</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <LetStatement>
       <keyword>let</keyword>
       <identifier>y</identifier>
       <symbol>=</symbol>
       <Expression>
        <identifier>y</identifier>
        <symbol>-</symbol>
        <Expression>
         <int_constant>2</int_constant>
        </Expression>
       </Expression>
       <symbol>;</symbol>
      </LetStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>setColor</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <keyword>true</keyword>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>drawRectangle</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <identifier>x</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>x</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
         <symbol>+</symbol>
         <Expression>
          <int_constant>1</int_constant>
         </Expression>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
     </Statements>
     <symbol>}</symbol>
    </IfStatement>
    <ReturnStatement>
     <keyword>return</keyword>
     <symbol>;</symbol>
    </ReturnStatement>
   </Statements>
  </SubroutineBody>
  <symbol>}</symbol>
 </SubroutineDec>
 <SubroutineDec>
  <keyword>method</keyword>
  <keyword>void</keyword>
  <identifier>moveDown</identifier>
  <symbol>(</symbol>
  <ParameterList>
  </ParameterList>
  <symbol>)</symbol>
  <symbol>{</symbol>
  <SubroutineBody>
   <Statements>
    <IfStatement>
     <keyword>if</keyword>
     <symbol>(</symbol>
     <Expression>
      <symbol>(</symbol>
      <Expression>
       <identifier>y</identifier>
       <symbol>+</symbol>
       <Expression>
        <identifier>size</identifier>
       </Expression>
      </Expression>
      <symbol>)</symbol>
      <symbol><</symbol>
      <Expression>
       <int_constant>254</int_constant>
      </Expression>
     </Expression>
     <symbol>)</symbol>
     <symbol>{</symbol>
     <Statements>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>setColor</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <keyword>false</keyword>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>drawRectangle</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <identifier>x</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>x</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
         <symbol>+</symbol>
         <Expression>
          <int_constant>1</int_constant>
         </Expression>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <LetStatement>
       <keyword>let</keyword>
       <identifier>y</identifier>
       <symbol>=</symbol>
       <Expression>
        <identifier>y</identifier>
        <symbol>+</symbol>
        <Expression>
         <int_constant>2</int_constant>
        </Expression>
       </Expression>
       <symbol>;</symbol>
      </LetStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>setColor</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <keyword>true</keyword>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>drawRectangle</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <identifier>x</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <symbol>(</symbol>
         <Expression>
          <identifier>y</identifier>
          <symbol>+</symbol>
          <Expression>
           <identifier>size</identifier>
          </Expression>
         </Expression>
         <symbol>)</symbol>
         <symbol>-</symbol>
         <Expression>
          <int_constant>1</int_constant>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>x</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
     </Statements>
     <symbol>}</symbol>
    </IfStatement>
    <ReturnStatement>
     <keyword>return</keyword>
     <symbol>;</symbol>
    </ReturnStatement>
   </Statements>
  </SubroutineBody>
  <symbol>}</symbol>
 </SubroutineDec>
 <SubroutineDec>
  <keyword>method</keyword>
  <keyword>void</keyword>
  <identifier>moveLeft</identifier>
  <symbol>(</symbol>
  <ParameterList>
  </ParameterList>
  <symbol>)</symbol>
  <symbol>{</symbol>
  <SubroutineBody>
   <Statements>
    <IfStatement>
     <keyword>if</keyword>
     <symbol>(</symbol>
     <Expression>
      <identifier>x</identifier>
      <symbol>></symbol>
      <Expression>
       <int_constant>1</int_constant>
      </Expression>
     </Expression>
     <symbol>)</symbol>
     <symbol>{</symbol>
     <Statements>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>setColor</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <keyword>false</keyword>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>drawRectangle</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <symbol>(</symbol>
         <Expression>
          <identifier>x</identifier>
          <symbol>+</symbol>
          <Expression>
           <identifier>size</identifier>
          </Expression>
         </Expression>
         <symbol>)</symbol>
         <symbol>-</symbol>
         <Expression>
          <int_constant>1</int_constant>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>x</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <LetStatement>
       <keyword>let</keyword>
       <identifier>x</identifier>
       <symbol>=</symbol>
       <Expression>
        <identifier>x</identifier>
        <symbol>-</symbol>
        <Expression>
         <int_constant>2</int_constant>
        </Expression>
       </Expression>
       <symbol>;</symbol>
      </LetStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>setColor</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <keyword>true</keyword>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>drawRectangle</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <identifier>x</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>x</identifier>
         <symbol>+</symbol>
         <Expression>
          <int_constant>1</int_constant>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
     </Statements>
     <symbol>}</symbol>
    </IfStatement>
    <ReturnStatement>
     <keyword>return</keyword>
     <symbol>;</symbol>
    </ReturnStatement>
   </Statements>
  </SubroutineBody>
  <symbol>}</symbol>
 </SubroutineDec>
 <SubroutineDec>
  <keyword>method</keyword>
  <keyword>void</keyword>
  <identifier>moveRight</identifier>
  <symbol>(</symbol>
  <ParameterList>
  </ParameterList>
  <symbol>)</symbol>
  <symbol>{</symbol>
  <SubroutineBody>
   <Statements>
    <IfStatement>
     <keyword>if</keyword>
     <symbol>(</symbol>
     <Expression>
      <symbol>(</symbol>
      <Expression>
       <identifier>x</identifier>
       <symbol>+</symbol>
       <Expression>
        <identifier>size</identifier>
       </Expression>
      </Expression>
      <symbol>)</symbol>
      <symbol><</symbol>
      <Expression>
       <int_constant>510</int_constant>
      </Expression>
     </Expression>
     <symbol>)</symbol>
     <symbol>{</symbol>
     <Statements>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>setColor</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <keyword>false</keyword>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>drawRectangle</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <identifier>x</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>x</identifier>
         <symbol>+</symbol>
         <Expression>
          <int_constant>1</int_constant>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <LetStatement>
       <keyword>let</keyword>
       <identifier>x</identifier>
       <symbol>=</symbol>
       <Expression>
        <identifier>x</identifier>
        <symbol>+</symbol>
        <Expression>
         <int_constant>2</int_constant>
        </Expression>
       </Expression>
       <symbol>;</symbol>
      </LetStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>setColor</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <keyword>true</keyword>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
      <DoStatement>
       <keyword>do</keyword>
       <identifier>Screen</identifier>
       <symbol>.</symbol>
       <identifier>drawRectangle</identifier>
       <symbol>(</symbol>
       <ExpressionList>
        <Expression>
         <symbol>(</symbol>
         <Expression>
          <identifier>x</identifier>
          <symbol>+</symbol>
          <Expression>
           <identifier>size</identifier>
          </Expression>
         </Expression>
         <symbol>)</symbol>
         <symbol>-</symbol>
         <Expression>
          <int_constant>1</int_constant>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>x</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
        <symbol>,</symbol>
        <Expression>
         <identifier>y</identifier>
         <symbol>+</symbol>
         <Expression>
          <identifier>size</identifier>
         </Expression>
        </Expression>
       </ExpressionList>
       <symbol>)</symbol>
       <symbol>;</symbol>
      </DoStatement>
     </Statements>
     <symbol>}</symbol>
    </IfStatement>
    <ReturnStatement>
     <keyword>return</keyword>
     <symbol>;</symbol>
    </ReturnStatement>
   </Statements>
  </SubroutineBody>
  <symbol>}</symbol>
 </SubroutineDec>
</class>
